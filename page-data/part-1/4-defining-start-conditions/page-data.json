{"componentChunkName":"component---src-templates-course-content-template-js","path":"/part-1/4-defining-start-conditions","result":{"data":{"page":{"htmlAst":{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next, we will start moving towards a more meaningful image. "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"youtube-dl"}]},{"type":"text","value":" is a program that downloads youtube videos "},{"type":"element","tagName":"a","properties":{"href":"https://rg3.github.io/youtube-dl/download.html","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"https://rg3.github.io/youtube-dl/download.html"}]},{"type":"text","value":". Let's add it to an image - but this time, we will change our process. Instead of our current process where we add things to the Dockerfile hope it works, let's try another approach. This time we will open up an interactive session and test stuff before \"storing\" it in our Dockerfile. By following the youtube-dl install instructions we will see that:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ docker run -it ubuntu:18.04\n  root@8c587232a608:/# curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl\n  bash: curl: command not found"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"..and, as we already know, curl is not installed - let's add "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"curl"}]},{"type":"text","value":" with "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"apt-get"}]},{"type":"text","value":" again."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ apt-get update && apt-get install -y curl\n$ curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"At some point, you may have noticed that "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"sudo"}]},{"type":"text","value":" is not installed either, but since we are "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"root"}]},{"type":"text","value":" we don't need it."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next, we will add permissions and run it:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ chmod a+rx /usr/local/bin/youtube-dl\n$ youtube-dl\n  /usr/bin/env: 'python': No such file or directory"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Okay - On the top of the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"youtube-dl"}]},{"type":"text","value":" download page we notice this message:"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Remember youtube-dl requires Python version 2.6, 2.7, or 3.2+ to work except for Windows exe."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So we will add python"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ apt-get install -y python"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And let's run it again"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ youtube-dl\n\n  WARNING: Assuming --restrict-filenames since file system encoding cannot encode all characters. Set the LC_ALL environment variable to fix this.\n  Usage: youtube-dl [OPTIONS] URL [URL...]\n\n  youtube-dl: error: You must provide at least one URL.\n  Type youtube-dl --help to see a list of all options."}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"It works (we just need to give an URL), but we notice that it outputs a warning about "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"LC_ALL"}]},{"type":"text","value":". In a regular Ubuntu desktop/server install the localization settings are (usually) set, but in this image they are not set, as we can see by running "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"env"}]},{"type":"text","value":" in our container. To fix this without installing additional locales, see this: "},{"type":"element","tagName":"a","properties":{"href":"https://stackoverflow.com/a/41648500","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"https://stackoverflow.com/a/41648500"}]}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ LC_ALL=C.UTF-8 youtube-dl"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And it works! Let's persist it for our session and try downloading a video:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ export LC_ALL=C.UTF-8\n$ youtube-dl https://imgur.com/JY5tHqr"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So now when we know exactly what we need. Starting FROM ubuntu:18.04, add these to our "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"Dockerfile"}]},{"type":"text","value":". We should always try to keep the most prone to change rows at the bottom, by adding the instructions to the bottom we can preserve our cached layers - this is handy practise to speed up creating the initial version of a Dockerfile when it has time-consuming operations like downloads. Also added WORKDIR, this will ensure the videos will be downloaded there."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"dockerfile"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-dockerfile"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-dockerfile"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"FROM"}]},{"type":"text","value":" ubuntu"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"18.04\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"WORKDIR"}]},{"type":"text","value":" /mydir\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"RUN"}]},{"type":"text","value":" apt"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"get update && apt"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"get install "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"y curl python\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"RUN"}]},{"type":"text","value":" curl "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"L https"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"//yt"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"dl.org/downloads/latest/youtube"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"dl "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"o /usr/local/bin/youtube"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"dl\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"RUN"}]},{"type":"text","value":" chmod a+x /usr/local/bin/youtube"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"dl\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"ENV"}]},{"type":"text","value":" LC_ALL=C.UTF"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"8\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"CMD"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"/usr/local/bin/youtube-dl\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]}]}]}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Instead of using "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"RUN export LC_ALL=C.UTF-8"}]},{"type":"text","value":" we store the environment directly in the image with ENV"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We also override "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"bash"}]},{"type":"text","value":" as our image command (set on the base image) with "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"youtube-dl"}]},{"type":"text","value":" itself. This will not work, but let's see why."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"When we build this as youtube-dl and run it:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ docker build -t youtube-dl .\n  ...\n\n$ docker run youtube-dl\n\n  Usage: youtube-dl [OPTIONS] URL [URL...]\n\n  youtube-dl: error: You must provide at least one URL.\n\n  Type youtube-dl --help to see a list of all options."}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So far so good, but now the natural way to use this image would be to give the URL as an argument:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ docker run youtube-dl https://imgur.com/JY5tHqr\n\n  /usr/local/bin/docker: Error response from daemon: OCI runtime create failed: container_linux.go:296: starting container process caused \"exec: \\\"https://imgur.com/JY5tHqr\\\": stat https://imgur.com/JY5tHqr: no such file or directory\": unknown.\n\n  ERRO[0001] error waiting for container: context canceled"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As we now know, the argument we gave it is replacing the command or "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"CMD"}]},{"type":"text","value":". We need a way to have something "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"before"}]},{"type":"text","value":" the command. Luckily we have a way to do this: we can use "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ENTRYPOINT"}]},{"type":"text","value":" to define the main executable and then docker will combine our run arguments for it."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"dockerfile"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-dockerfile"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-dockerfile"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"FROM"}]},{"type":"text","value":" ubuntu"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"18.04\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"WORKDIR"}]},{"type":"text","value":" /mydir\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"RUN"}]},{"type":"text","value":" apt"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"get update && apt"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"get install "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"y curl python\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"RUN"}]},{"type":"text","value":" curl "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"L https"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"//yt"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"dl.org/downloads/latest/youtube"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"dl "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"o /usr/local/bin/youtube"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"dl\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"RUN"}]},{"type":"text","value":" chmod a+x /usr/local/bin/youtube"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"dl\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"ENV"}]},{"type":"text","value":" LC_ALL=C.UTF"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"8\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# Replacing CMD with ENTRYPOINT"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"ENTRYPOINT"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"/usr/local/bin/youtube-dl\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And now it works like it should:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ docker build -t youtube-dl .\n$ docker run youtube-dl https://imgur.com/JY5tHqr\n\n  [Imgur] JY5tHqr: Downloading webpage\n  [download] Destination: Imgur-JY5tHqr.mp4\n  [download] 100% of 190.20KiB in 00:0044MiB/s ETA 00:000"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"ENTRYPOINT"}]},{"type":"text","value":" "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"docker run"}]},{"type":"text","value":" now executed the combined "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"/usr/local/bin/youtube-dl https://imgur.com/JY5tHqr"}]},{"type":"text","value":" inside the container with that command!"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ENTRYPOINT"}]},{"type":"text","value":" vs "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"CMD"}]},{"type":"text","value":" can be confusing - in a properly set up image such as our youtube-dl the command represents an argument list for the entrypoint. By default entrypoint is set as "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"/bin/sh"}]},{"type":"text","value":" and this is passed if no entrypoint is set. This is why giving path to a script file as CMD works: you're giving the file as a parameter to "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"/bin/sh"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In addition, there are two ways to set them: "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"exec"}]},{"type":"text","value":" form and "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"shell"}]},{"type":"text","value":" form. We've been using the exec form where the command itself is executed. In shell form the command that is executed is wrapped with "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"/bin/sh -c"}]},{"type":"text","value":" - it's useful when you need to evaluate environment variables in the command like "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$MYSQL_PASSWORD"}]},{"type":"text","value":" or similar."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In the shell form the command is provided as a string without brackets. In the exec form the command and it's arguments are provided as a list (with brackets), see the table below:"}]},{"type":"text","value":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"element","tagName":"thead","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Dockerfile"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"Resulting command"}]}]}]},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"ENTRYPOINT /bin/ping -c 3 "},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":" CMD localhost"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"/bin/sh -c '/bin/ping -c 3' /bin/sh -c localhost"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"ENTRYPOINT [\"/bin/ping\",\"-c\",\"3\"] "},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":" CMD localhost"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"/bin/ping -c 3 /bin/sh -c localhost"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"ENTRYPOINT /bin/ping -c 3 "},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":" CMD [\"localhost\"]"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"/bin/sh -c '/bin/ping -c 3' localhost"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"ENTRYPOINT [\"/bin/ping\",\"-c\",\"3\"] "},{"type":"element","tagName":"br","properties":{},"children":[]},{"type":"text","value":" CMD [\"localhost\"]"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"/bin/ping -c 3 localhost"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As the command at the end of docker run will be the CMD we want to use ENTRYPOINT to specify what to run, and CMD to specify which command (in our case url) to run."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Most of the time"}]},{"type":"text","value":" we can ignore ENTRYPOINT when building our images and only use CMD. For example, ubuntu image defaults the ENTRYPOINT to bash so we do not have to worry about it. And it gives us the convenience of allowing us to overwrite the CMD easily, for example, with bash to go inside the container."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can test how some other projects do this. Let's try python:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ docker pull python:3.8\n...\n$ docker run -it python:3.8\n  Python 3.8.2 (default, Mar 31 2020, 15:23:55)\n  [GCC 8.3.0] on linux\n  Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n  >>> print(\"Hello, World!\")\n  Hello, World!\n  >>> exit()\n\n$ docker run -it python:3.8 --version\n  docker: Error response from daemon: OCI runtime create failed: container_linux.go:370: starting container process caused: exec: \"--version\": executable file not found in $PATH: unknown.\n\n$ docker run -it python:3.8 bash\n  root@1b7b99ae2f40:/#\n"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"From this experimentation we learned that they have ENTRYPOINT as something other than python, but the CMD is python and we can overwrite it, here with bash. If they had ENTRYPOINT as python we'd be able to run "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"--version"}]},{"type":"text","value":". We can create our own image for personal use as we did in a previous exercise with a new Dockerfile."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"dockerfile"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-dockerfile"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-dockerfile"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"FROM"}]},{"type":"text","value":" python"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"3.8\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"ENTRYPOINT"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"python3\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","keyword"]},"children":[{"type":"text","value":"CMD"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"["}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"--help\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"]"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The result is an image that has python as ENTRYPOINT and you can add the commands at the end, for example —version to see the version. Without overwriting the command, it will output the help."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now we have two problems with the youtube-dl project:"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Major: The downloaded files stay in the container"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Minor: Our container build process creates many layers resulting in increased image size"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We will fix the major issue first. The minor issue will get our attention in part 3."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"By inspecting "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"docker container ls -a"}]},{"type":"text","value":" we can see all our previous runs. When we filter this list with"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ docker container ls -a --last 3\n\n  CONTAINER ID        IMAGE               COMMAND                   CREATED                  STATUS                          PORTS               NAMES\n  be9fdbcafb23        youtube-dl          \"/usr/local/bin/yout…\"    Less than a second ago   Exited (0) About a minute ago                       determined_elion\n  b61e4029f997        f2210c2591a1        \"/bin/sh -c \\\"/usr/lo…\"   Less than a second ago   Exited (2) About a minute ago                       vigorous_bardeen\n  326bb4f5af1e        f2210c2591a1        \"/bin/sh -c \\\"/usr/lo…\"   About a minute ago       Exited (2) 3 minutes ago                            hardcore_carson"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We see that the last container was "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"be9fdbcafb23"}]},{"type":"text","value":" or "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"determined_elion"}]},{"type":"text","value":" for us humans."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ docker diff determined_elion\n\n  C /mydir\n  A /mydir/Imgur-JY5tHqr.mp4"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's try "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"docker cp"}]},{"type":"text","value":" command to copy the file. We can use quotes if the filename has spaces."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ docker cp \"determined_elion://mydir/Imgur-JY5tHqr.mp4\" ."}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And now we have our file locally. Sadly, this is not sufficient to fix our issue. In the next section, we will improve this."}]},{"type":"element","tagName":"text-box","properties":{"name":"Entrypoint to improve curler","variant":"hint"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"ENTRYPOINT"}]},{"type":"text","value":" we can make the curler more flexible."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Change the script to take in the first argument as the input:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"bash"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-bash"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","shebang","important"]},"children":[{"type":"text","value":"#!/bin/bash"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"span","properties":{"className":["token","builtin","class-name"]},"children":[{"type":"text","value":"echo"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"Searching..\""}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"sleep"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"span","properties":{"className":["token","function"]},"children":[{"type":"text","value":"curl"}]},{"type":"text","value":" http://"},{"type":"element","tagName":"span","properties":{"className":["token","variable"]},"children":[{"type":"text","value":"$1"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":";"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And change the CMD to ENTRYPOINT with the format "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"[ \"./script.txt\" ]"}]},{"type":"text","value":". Now we can run"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"bash"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-bash"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-bash"]},"children":[{"type":"text","value":"$ docker build "},{"type":"element","tagName":"span","properties":{"className":["token","builtin","class-name"]},"children":[{"type":"text","value":"."}]},{"type":"text","value":" -t curler-v2\n$ docker run curler-v2 helsinki.fi\n\n  Searching"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":".."}]},{"type":"text","value":"\n    % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                   Dload  Upload   Total   Spent    Left  Speed\n  "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"100"}]},{"type":"text","value":"   "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"232"}]},{"type":"text","value":"  "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"100"}]},{"type":"text","value":"   "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"232"}]},{"type":"text","value":"    "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"     "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":"  "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"13647"}]},{"type":"text","value":"      "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"0"}]},{"type":"text","value":" --:--:-- --:--:-- --:--:-- "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"13647"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"!"}]},{"type":"text","value":"DOCTYPE HTML PUBLIC "},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"-//IETF//DTD HTML 2.0//EN\""}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"html"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"head"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"title"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"301"}]},{"type":"text","value":" Moved Permanently"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"/title"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"/head"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"body"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"h"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","file-descriptor","important"]},"children":[{"type":"text","value":"1"}]},{"type":"text","value":">"}]},{"type":"text","value":"Moved Permanently"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"/h"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","file-descriptor","important"]},"children":[{"type":"text","value":"1"}]},{"type":"text","value":">"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"p"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"The document has moved "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"a "},{"type":"element","tagName":"span","properties":{"className":["token","assign-left","variable"]},"children":[{"type":"text","value":"href"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"="}]},{"type":"element","tagName":"span","properties":{"className":["token","string"]},"children":[{"type":"text","value":"\"https://www.helsinki.fi/\""}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"here"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"/a"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"."},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"/p"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"/body"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":"<"}]},{"type":"text","value":"/html"},{"type":"element","tagName":"span","properties":{"className":["token","operator"]},"children":[{"type":"text","value":">"}]}]}]}]}]}]},"html":"<div><p>Next, we will start moving towards a more meaningful image. <em>youtube-dl</em> is a program that downloads youtube videos <a href=\"https://rg3.github.io/youtube-dl/download.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://rg3.github.io/youtube-dl/download.html</a>. Let's add it to an image - but this time, we will change our process. Instead of our current process where we add things to the Dockerfile hope it works, let's try another approach. This time we will open up an interactive session and test stuff before \"storing\" it in our Dockerfile. By following the youtube-dl install instructions we will see that:</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker run -it ubuntu:18.04\n  root@8c587232a608:/# curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl\n  bash: curl: command not found</code></pre></div><p>..and, as we already know, curl is not installed - let's add <code class=\"language-text\">curl</code> with <code class=\"language-text\">apt-get</code> again.</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ apt-get update &amp;&amp; apt-get install -y curl\n$ curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl</code></pre></div><p>At some point, you may have noticed that <em>sudo</em> is not installed either, but since we are <em>root</em> we don't need it.</p><p>Next, we will add permissions and run it:</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ chmod a+rx /usr/local/bin/youtube-dl\n$ youtube-dl\n  /usr/bin/env: &#39;python&#39;: No such file or directory</code></pre></div><p>Okay - On the top of the <code class=\"language-text\">youtube-dl</code> download page we notice this message:</p><p>Remember youtube-dl requires Python version 2.6, 2.7, or 3.2+ to work except for Windows exe.</p><p>So we will add python</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ apt-get install -y python</code></pre></div><p>And let's run it again</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ youtube-dl\n\n  WARNING: Assuming --restrict-filenames since file system encoding cannot encode all characters. Set the LC_ALL environment variable to fix this.\n  Usage: youtube-dl [OPTIONS] URL [URL...]\n\n  youtube-dl: error: You must provide at least one URL.\n  Type youtube-dl --help to see a list of all options.</code></pre></div><p>It works (we just need to give an URL), but we notice that it outputs a warning about <code class=\"language-text\">LC_ALL</code>. In a regular Ubuntu desktop/server install the localization settings are (usually) set, but in this image they are not set, as we can see by running <code class=\"language-text\">env</code> in our container. To fix this without installing additional locales, see this: <a href=\"https://stackoverflow.com/a/41648500\" target=\"_blank\" rel=\"noopener noreferrer\">https://stackoverflow.com/a/41648500</a></p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ LC_ALL=C.UTF-8 youtube-dl</code></pre></div><p>And it works! Let's persist it for our session and try downloading a video:</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ export LC_ALL=C.UTF-8\n$ youtube-dl https://imgur.com/JY5tHqr</code></pre></div><p>So now when we know exactly what we need. Starting FROM ubuntu:18.04, add these to our <code class=\"language-text\">Dockerfile</code>. We should always try to keep the most prone to change rows at the bottom, by adding the instructions to the bottom we can preserve our cached layers - this is handy practise to speed up creating the initial version of a Dockerfile when it has time-consuming operations like downloads. Also added WORKDIR, this will ensure the videos will be downloaded there.</p><div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">FROM</span> ubuntu<span class=\"token punctuation\">:</span>18.04\n\n<span class=\"token keyword\">WORKDIR</span> /mydir\n\n<span class=\"token keyword\">RUN</span> apt<span class=\"token punctuation\">-</span>get update &amp;&amp; apt<span class=\"token punctuation\">-</span>get install <span class=\"token punctuation\">-</span>y curl python\n<span class=\"token keyword\">RUN</span> curl <span class=\"token punctuation\">-</span>L https<span class=\"token punctuation\">:</span>//yt<span class=\"token punctuation\">-</span>dl.org/downloads/latest/youtube<span class=\"token punctuation\">-</span>dl <span class=\"token punctuation\">-</span>o /usr/local/bin/youtube<span class=\"token punctuation\">-</span>dl\n<span class=\"token keyword\">RUN</span> chmod a+x /usr/local/bin/youtube<span class=\"token punctuation\">-</span>dl\n\n<span class=\"token keyword\">ENV</span> LC_ALL=C.UTF<span class=\"token punctuation\">-</span>8\n\n<span class=\"token keyword\">CMD</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/usr/local/bin/youtube-dl\"</span><span class=\"token punctuation\">]</span></code></pre></div><ul>\n<li>\n<p>Instead of using <code class=\"language-text\">RUN export LC_ALL=C.UTF-8</code> we store the environment directly in the image with ENV</p>\n</li>\n<li>\n<p>We also override <code class=\"language-text\">bash</code> as our image command (set on the base image) with <em>youtube-dl</em> itself. This will not work, but let's see why.</p>\n</li>\n</ul><p>When we build this as youtube-dl and run it:</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker build -t youtube-dl .\n  ...\n\n$ docker run youtube-dl\n\n  Usage: youtube-dl [OPTIONS] URL [URL...]\n\n  youtube-dl: error: You must provide at least one URL.\n\n  Type youtube-dl --help to see a list of all options.</code></pre></div><p>So far so good, but now the natural way to use this image would be to give the URL as an argument:</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker run youtube-dl https://imgur.com/JY5tHqr\n\n  /usr/local/bin/docker: Error response from daemon: OCI runtime create failed: container_linux.go:296: starting container process caused &quot;exec: \\&quot;https://imgur.com/JY5tHqr\\&quot;: stat https://imgur.com/JY5tHqr: no such file or directory&quot;: unknown.\n\n  ERRO[0001] error waiting for container: context canceled</code></pre></div><p>As we now know, the argument we gave it is replacing the command or <code class=\"language-text\">CMD</code>. We need a way to have something <em>before</em> the command. Luckily we have a way to do this: we can use <code class=\"language-text\">ENTRYPOINT</code> to define the main executable and then docker will combine our run arguments for it.</p><div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">FROM</span> ubuntu<span class=\"token punctuation\">:</span>18.04\n\n<span class=\"token keyword\">WORKDIR</span> /mydir\n\n<span class=\"token keyword\">RUN</span> apt<span class=\"token punctuation\">-</span>get update &amp;&amp; apt<span class=\"token punctuation\">-</span>get install <span class=\"token punctuation\">-</span>y curl python\n<span class=\"token keyword\">RUN</span> curl <span class=\"token punctuation\">-</span>L https<span class=\"token punctuation\">:</span>//yt<span class=\"token punctuation\">-</span>dl.org/downloads/latest/youtube<span class=\"token punctuation\">-</span>dl <span class=\"token punctuation\">-</span>o /usr/local/bin/youtube<span class=\"token punctuation\">-</span>dl\n<span class=\"token keyword\">RUN</span> chmod a+x /usr/local/bin/youtube<span class=\"token punctuation\">-</span>dl\n\n<span class=\"token keyword\">ENV</span> LC_ALL=C.UTF<span class=\"token punctuation\">-</span>8\n\n<span class=\"token comment\"># Replacing CMD with ENTRYPOINT</span>\n<span class=\"token keyword\">ENTRYPOINT</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"/usr/local/bin/youtube-dl\"</span><span class=\"token punctuation\">]</span></code></pre></div><p>And now it works like it should:</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker build -t youtube-dl .\n$ docker run youtube-dl https://imgur.com/JY5tHqr\n\n  [Imgur] JY5tHqr: Downloading webpage\n  [download] Destination: Imgur-JY5tHqr.mp4\n  [download] 100% of 190.20KiB in 00:0044MiB/s ETA 00:000</code></pre></div><p>With <em>ENTRYPOINT</em> <code class=\"language-text\">docker run</code> now executed the combined <code class=\"language-text\">/usr/local/bin/youtube-dl https://imgur.com/JY5tHqr</code> inside the container with that command!</p><p><code class=\"language-text\">ENTRYPOINT</code> vs <code class=\"language-text\">CMD</code> can be confusing - in a properly set up image such as our youtube-dl the command represents an argument list for the entrypoint. By default entrypoint is set as <code class=\"language-text\">/bin/sh</code> and this is passed if no entrypoint is set. This is why giving path to a script file as CMD works: you're giving the file as a parameter to <code class=\"language-text\">/bin/sh</code>.</p><p>In addition, there are two ways to set them: <strong>exec</strong> form and <strong>shell</strong> form. We've been using the exec form where the command itself is executed. In shell form the command that is executed is wrapped with <code class=\"language-text\">/bin/sh -c</code> - it's useful when you need to evaluate environment variables in the command like <code class=\"language-text\">$MYSQL_PASSWORD</code> or similar.</p><p>In the shell form the command is provided as a string without brackets. In the exec form the command and it's arguments are provided as a list (with brackets), see the table below:</p><table>\n<thead>\n<tr>\n<th>Dockerfile</th>\n<th>Resulting command</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ENTRYPOINT /bin/ping -c 3 <br> CMD localhost</td>\n<td>/bin/sh -c '/bin/ping -c 3' /bin/sh -c localhost</td>\n</tr>\n<tr>\n<td>ENTRYPOINT [\"/bin/ping\",\"-c\",\"3\"] <br> CMD localhost</td>\n<td>/bin/ping -c 3 /bin/sh -c localhost</td>\n</tr>\n<tr>\n<td>ENTRYPOINT /bin/ping -c 3 <br> CMD [\"localhost\"]</td>\n<td>/bin/sh -c '/bin/ping -c 3' localhost</td>\n</tr>\n<tr>\n<td>ENTRYPOINT [\"/bin/ping\",\"-c\",\"3\"] <br> CMD [\"localhost\"]</td>\n<td>/bin/ping -c 3 localhost</td>\n</tr>\n</tbody>\n</table><p>As the command at the end of docker run will be the CMD we want to use ENTRYPOINT to specify what to run, and CMD to specify which command (in our case url) to run.</p><p><strong>Most of the time</strong> we can ignore ENTRYPOINT when building our images and only use CMD. For example, ubuntu image defaults the ENTRYPOINT to bash so we do not have to worry about it. And it gives us the convenience of allowing us to overwrite the CMD easily, for example, with bash to go inside the container.</p><p>We can test how some other projects do this. Let's try python:</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker pull python:3.8\n...\n$ docker run -it python:3.8\n  Python 3.8.2 (default, Mar 31 2020, 15:23:55)\n  [GCC 8.3.0] on linux\n  Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.\n  &gt;&gt;&gt; print(&quot;Hello, World!&quot;)\n  Hello, World!\n  &gt;&gt;&gt; exit()\n\n$ docker run -it python:3.8 --version\n  docker: Error response from daemon: OCI runtime create failed: container_linux.go:370: starting container process caused: exec: &quot;--version&quot;: executable file not found in $PATH: unknown.\n\n$ docker run -it python:3.8 bash\n  root@1b7b99ae2f40:/#\n</code></pre></div><p>From this experimentation we learned that they have ENTRYPOINT as something other than python, but the CMD is python and we can overwrite it, here with bash. If they had ENTRYPOINT as python we'd be able to run <code class=\"language-text\">--version</code>. We can create our own image for personal use as we did in a previous exercise with a new Dockerfile.</p><div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token keyword\">FROM</span> python<span class=\"token punctuation\">:</span>3.8\n<span class=\"token keyword\">ENTRYPOINT</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"python3\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">CMD</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"--help\"</span><span class=\"token punctuation\">]</span></code></pre></div><p>The result is an image that has python as ENTRYPOINT and you can add the commands at the end, for example —version to see the version. Without overwriting the command, it will output the help.</p><p>Now we have two problems with the youtube-dl project:</p><ul>\n<li>\n<p>Major: The downloaded files stay in the container</p>\n</li>\n<li>\n<p>Minor: Our container build process creates many layers resulting in increased image size</p>\n</li>\n</ul><p>We will fix the major issue first. The minor issue will get our attention in part 3.</p><p>By inspecting <code class=\"language-text\">docker container ls -a</code> we can see all our previous runs. When we filter this list with</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker container ls -a --last 3\n\n  CONTAINER ID        IMAGE               COMMAND                   CREATED                  STATUS                          PORTS               NAMES\n  be9fdbcafb23        youtube-dl          &quot;/usr/local/bin/yout…&quot;    Less than a second ago   Exited (0) About a minute ago                       determined_elion\n  b61e4029f997        f2210c2591a1        &quot;/bin/sh -c \\&quot;/usr/lo…&quot;   Less than a second ago   Exited (2) About a minute ago                       vigorous_bardeen\n  326bb4f5af1e        f2210c2591a1        &quot;/bin/sh -c \\&quot;/usr/lo…&quot;   About a minute ago       Exited (2) 3 minutes ago                            hardcore_carson</code></pre></div><p>We see that the last container was <code class=\"language-text\">be9fdbcafb23</code> or <code class=\"language-text\">determined_elion</code> for us humans.</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker diff determined_elion\n\n  C /mydir\n  A /mydir/Imgur-JY5tHqr.mp4</code></pre></div><p>Let's try <code class=\"language-text\">docker cp</code> command to copy the file. We can use quotes if the filename has spaces.</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ docker cp &quot;determined_elion://mydir/Imgur-JY5tHqr.mp4&quot; .</code></pre></div><p>And now we have our file locally. Sadly, this is not sufficient to fix our issue. In the next section, we will improve this.</p><text-box name=\"Entrypoint to improve curler\" variant=\"hint\"><p>With <code class=\"language-text\">ENTRYPOINT</code> we can make the curler more flexible.</p><p>Change the script to take in the first argument as the input:</p><div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n\n<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Searching..\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">sleep</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">curl</span> http://<span class=\"token variable\">$1</span><span class=\"token punctuation\">;</span></code></pre></div><p>And change the CMD to ENTRYPOINT with the format <code class=\"language-text\">[ &quot;./script.txt&quot; ]</code>. Now we can run</p><div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker build <span class=\"token builtin class-name\">.</span> -t curler-v2\n$ docker run curler-v2 helsinki.fi\n\n  Searching<span class=\"token punctuation\">..</span>\n    % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                   Dload  Upload   Total   Spent    Left  Speed\n  <span class=\"token number\">100</span>   <span class=\"token number\">232</span>  <span class=\"token number\">100</span>   <span class=\"token number\">232</span>    <span class=\"token number\">0</span>     <span class=\"token number\">0</span>  <span class=\"token number\">13647</span>      <span class=\"token number\">0</span> --:--:-- --:--:-- --:--:-- <span class=\"token number\">13647</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE HTML PUBLIC <span class=\"token string\">\"-//IETF//DTD HTML 2.0//EN\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span><span class=\"token number\">301</span> Moved Permanently<span class=\"token operator\">&lt;</span>/title<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>/head<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span>Moved Permanently<span class=\"token operator\">&lt;</span>/h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span>\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>The document has moved <span class=\"token operator\">&lt;</span>a <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"https://www.helsinki.fi/\"</span><span class=\"token operator\">></span>here<span class=\"token operator\">&lt;</span>/a<span class=\"token operator\">></span>.<span class=\"token operator\">&lt;</span>/p<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>/body<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/html<span class=\"token operator\">></span></code></pre></div></text-box></div>","frontmatter":{"path":"/part-1/4-defining-start-conditions","title":"Defining start conditions for the container"},"fileAbsolutePath":"/home/runner/work/Docker-exercise/Docker-exercise/data/part-1/section-4.md"},"allPages":{"edges":[{"node":{"id":"b3a06a99-478d-55a4-9cc1-d69575b4d32c","frontmatter":{"path":"/faq","title":"Frequently asked questions"}}},{"node":{"id":"cfd0747d-914b-58fd-8123-8e0c442eb1b9","frontmatter":{"path":"/frontmatter-guide","title":"Frontmatter-guide"}}},{"node":{"id":"5bb47ad0-b8d2-5bd0-baec-e41c3bdb1c60","frontmatter":{"path":"/getting-started","title":"Getting started"}}},{"node":{"id":"55c9d384-35d1-572e-ad03-04e9875f2a76","frontmatter":{"path":"/","title":"About this course"}}},{"node":{"id":"10c6e50d-f6f5-5ae3-a5bb-9d744b586795","frontmatter":{"path":"/links","title":"Links"}}},{"node":{"id":"d9589b60-f836-5c76-b5f6-6bc5b2f2f0ed","frontmatter":{"path":"/part-1","title":"Part 1"}}},{"node":{"id":"07b7eaa5-1d05-5a26-ac0b-432a806f5e24","frontmatter":{"path":"/part-1/1-getting-started","title":"Definitions and basic concepts"}}},{"node":{"id":"9d74315f-66cb-5db4-901c-e72563df2cdf","frontmatter":{"path":"/part-1/2-running-and-stopping","title":"Running and stopping containers"}}},{"node":{"id":"7576df19-e29b-5b6a-af8f-8431bc65f832","frontmatter":{"path":"/part-1/6-docker-hub","title":"Utilizing tools from the Registry"}}},{"node":{"id":"d712af4c-747e-5d40-a2e8-2325d12e1ee5","frontmatter":{"path":"/part-1/7-summary","title":"Summary"}}},{"node":{"id":"68b09cfd-2ca0-5414-9991-5f758e4dd5e8","frontmatter":{"path":"/part-2","title":"Part 2"}}},{"node":{"id":"65b9c481-2fa6-593d-b40a-652a59522563","frontmatter":{"path":"/part-2/1-migrating-to-docker-compose","title":"Migrating to docker compose"}}},{"node":{"id":"2d2eac8b-a710-5ac5-98cd-3d8f2a3b810c","frontmatter":{"path":"/part-2/2-docker-networking","title":"Docker networking"}}},{"node":{"id":"4324afef-7181-5900-8206-c2bb4ca8451b","frontmatter":{"path":"/part-2/3-volumes-in-action","title":"Volumes in action"}}},{"node":{"id":"3fa82ecc-29ac-5591-9927-d0bda27d6dac","frontmatter":{"path":"/part-1/5-volumes-and-ports","title":"Interacting with the container via volumes and ports"}}},{"node":{"id":"37c403d4-4564-57c7-b225-a84bd5224895","frontmatter":{"path":"/part-2/5-summary","title":"Summary"}}},{"node":{"id":"e8a96446-1bc6-5d32-aee2-3707ae08e96d","frontmatter":{"path":"/part-2/4-containers-in-development","title":"Containers in development"}}},{"node":{"id":"4825e9ea-35de-51e0-b751-ee7eccb4429d","frontmatter":{"path":"/part-1/4-defining-start-conditions","title":"Defining start conditions for the container"}}},{"node":{"id":"1a7e7b06-e926-5ec3-b82f-bbfabcbb533f","frontmatter":{"path":"/part-1/3-in-depth-dive-to-images","title":"In-depth dive to images"}}},{"node":{"id":"08f1a4d0-8b8a-5a9b-857e-b327af16e4fd","frontmatter":{"path":"/part-3","title":"Part 3"}}},{"node":{"id":"f20c3af8-dfb9-5494-b517-a64a414139b2","frontmatter":{"path":"/part-3/1-deeper-understainding-of-containers","title":"Deeper understanding of containers"}}},{"node":{"id":"93a8d56d-2100-5286-bbcd-9a81d193ea56","frontmatter":{"path":"/part-3/2-deployment-pipelines","title":"Deployment pipelines"}}},{"node":{"id":"5d3c8fd1-0acd-5d77-8a9b-73da7f94aec7","frontmatter":{"path":"/part-3/3-using-non-root-user","title":"Using a non-root user"}}},{"node":{"id":"e0ffe555-3ff7-5e13-8a5f-11b939fe26e8","frontmatter":{"path":"/part-3/4-optimizing-the-image-size","title":"Optimizing the image size"}}},{"node":{"id":"b23dce26-34d9-5edb-a5d0-9d0304786686","frontmatter":{"path":"/part-3/5-multi-host-environments","title":"Multi-host environments"}}},{"node":{"id":"23a6c156-6839-532b-a69c-fc6c048d9ce3","frontmatter":{"path":"/part-3/6-end","title":"End"}}}]}},"pageContext":{}},"staticQueryHashes":["3294351120","994120085"]}